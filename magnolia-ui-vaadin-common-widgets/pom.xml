<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>info.magnolia.ui</groupId>
    <artifactId>magnolia-ui-project</artifactId>
    <version>5.4.9-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>magnolia-ui-vaadin-common-widgets</artifactId>
  <name>magnolia-ui-vaadin-common-widgets</name>

  <properties>
    <skipClover>true</skipClover>
  </properties>

  <dependencies>
    <dependency>
      <groupId>info.magnolia.ui</groupId>
      <artifactId>magnolia-ui-vaadin-integration</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-shared</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
    </dependency>
    <dependency>
        <groupId>org.vaadin.addons</groupId>
        <artifactId>cssinject</artifactId>
    </dependency>
    <dependency>
      <groupId>org.vaadin.addons</groupId>
      <artifactId>aceeditor</artifactId>
    </dependency>
    <dependency>
      <groupId>com.googlecode.mgwt</groupId>
      <artifactId>mgwt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.vaadin.addons</groupId>
      <artifactId>gwt-graphics</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.vaadin.addons</groupId>
      <artifactId>ckeditor-wrapper-for-vaadin</artifactId>
    </dependency>
    <dependency>
      <groupId>com.jhlabs</groupId>
      <artifactId>filters</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- To get gwt debugger working in intellij you need to add a GWT
        Facet to this project. Otherwise it won't recognize it as a GWT project.
        Use the gwt-maven-plugin to tell the Facet which GWT SDK to use. -->
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/java</directory>
              <includes>
                <include>com/vaadin/</include>
                <include>org/vaadin/openesignforms/</include>
              </includes>
              <excludes>
                <exclude>com/vaadin/README.txt</exclude>
              </excludes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Vaadin-Package-Version>1</Vaadin-Package-Version>
              <Vaadin-Widgetsets>
                info.magnolia.ui.vaadin.gwt.CommonWidgetSet
              </Vaadin-Widgetsets>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-gwt-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/java</directory>
                  <includes>
                    <!-- include sources -->
                    <include>**/*.java</include>
                    <include>**/*.js</include>
                    <!-- include widgetset -->
                    <include>**/*.gwt.xml</include>
                    <!-- include public folder -->
                    <include>**/public/**</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
     <!--
      We currently need to maintain a patched version of Vaadin's VScrollTable.java due to some limitations regarding extensibility
      in the original class and which Vaadin cannot handle at the moment (TODO add Vaadin tickets raised by Magnolia about this, if any).
      Here what we do is
        1) extract VScrollTable.java sources from the vaadin core jar dependency.
        2) apply our own patch (see src/main/patches/vscrolltable.txt) to the class's original sources.
        3) rename the original VScrollTable.java to VScrollTablePatched.java which our code will use instead of the original.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-vaadin-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.vaadin</groupId>
                  <artifactId>vaadin-client</artifactId>
                  <version>${vaadinVersion}</version>
                  <type>jar</type>
                  <classifier>sources</classifier>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.sourceDirectory}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.vaadin</groupId>
                  <artifactId>vaadin-server</artifactId>
                  <version>${vaadinVersion}</version>
                  <type>jar</type>
                  <classifier>sources</classifier>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.sourceDirectory}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.vaadin.addons</groupId>
                  <artifactId>ckeditor-wrapper-for-vaadin</artifactId>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.sourceDirectory}</outputDirectory>
                </artifactItem>
              </artifactItems>
              <includes>
                com/vaadin/client/ui/VScrollTable.java,
                com/vaadin/client/ui/VTreeTable.java,
                com/vaadin/client/ui/panel/PanelConnector.java,
                com/vaadin/client/ui/table/TableConnector.java,
                com/vaadin/client/ui/treetable/TreeTableConnector.java,
                com/vaadin/ui/DragAndDropWrapper.java,
                org/vaadin/openesignforms/ckeditor/widgetset/client/ui/VCKEditorTextField.java
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-patch-plugin</artifactId>
        <configuration>
          <optimizations>false</optimizations>
          <patches>
            <patch>vscrolltable.txt</patch>
            <patch>vtreetable.txt</patch>
            <patch>panelconnector.txt</patch>
            <patch>scrolltableconnector.txt</patch>
            <patch>treetableconnector.txt</patch>
            <patch>draganddropwrapper.txt</patch>
            <patch>vckeditortextfield.txt</patch>
          </patches>
          <strictPatching>true</strictPatching>
          <strip>4</strip>
        </configuration>
        <executions>
          <execution>
            <id>patch</id>
            <phase>process-sources</phase>
            <goals>
              <goal>apply</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
             <!-- Rename patched table classes -->
            <configuration>
              <source>
                import java.io.File
                import java.util.regex.Matcher
                def path = "${project.build.sourceDirectory}/com/vaadin/client/ui/"
                def renameMap = [
                    (new File(path + "VScrollTable.java")):(new File(path + "VScrollTablePatched.java")),
                    (new File(path + "VTreeTable.java")):(new File(path + "VTreeTablePatched.java")),
                    (new File(path + "panel/PanelConnector.java")):(new File(path + "panel/EnterFriendlyPanelConnector.java")),
                    (new File(path + "treetable/TreeTableConnector.java")):(new File(path + "treetable/TreeTableConnectorPatched.java")),
                    (new File(path + "table/TableConnector.java")):(new File(path + "table/TableConnectorPatched.java"))
                ];

                for (v in renameMap) {
                    println "Renaming ${v.key.name} to ${v.value.name}..."
                    v.key.renameTo(v.value)
                }

              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <excludes>
            com/vaadin/ui/**,
            com/vaadin/client/ui/**,
            org/vaadin/openesignforms/ckeditor/widgetset/client/ui/**,
            org/vaadin/peter/contextmenu/**
          </excludes>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.0,)</versionRange>
                    <goals>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-patch-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>apply</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>groovy-maven-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>execute</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
