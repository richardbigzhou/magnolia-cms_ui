--- k1/src/main/java/com/vaadin/client/ui/table/TableConnector.java	2014-10-16 02:00:54.000000000 +0200
+++ k2/src/main/java/com/vaadin/client/ui/table/TableConnector.java	2014-11-21 18:58:00.000000000 +0100
@@ -41,11 +41,11 @@
 import com.vaadin.client.WidgetUtil;
 import com.vaadin.client.ui.AbstractFieldConnector;
 import com.vaadin.client.ui.PostLayoutListener;
-import com.vaadin.client.ui.VScrollTable;
-import com.vaadin.client.ui.VScrollTable.ContextMenuDetails;
+import com.vaadin.client.ui.VScrollTablePatched;
+import com.vaadin.client.ui.VScrollTablePatched.ContextMenuDetails;
 import com.vaadin.client.ui.VScrollTable.FooterCell;
 import com.vaadin.client.ui.VScrollTable.HeaderCell;
-import com.vaadin.client.ui.VScrollTable.VScrollTableBody.VScrollTableRow;
+import com.vaadin.client.ui.VScrollTablePatched.VScrollTableBody.VScrollTableRow;
 import com.vaadin.shared.MouseEventDetails;
 import com.vaadin.shared.ui.Connect;
 import com.vaadin.shared.ui.table.TableConstants;
@@ -53,15 +53,15 @@
 import com.vaadin.shared.ui.table.TableServerRpc;
 import com.vaadin.shared.ui.table.TableState;

-@Connect(com.vaadin.ui.Table.class)
-public class TableConnector extends AbstractFieldConnector implements
+//@Connect(com.vaadin.ui.Table.class)
+public class TableConnectorPatched extends AbstractFieldConnector implements
         HasComponentsConnector, ConnectorHierarchyChangeHandler, Paintable,
         DirectionalManagedLayout, PostLayoutListener,
         HasChildMeasurementHintConnector {

     private List<ComponentConnector> childComponents;

-    public TableConnector() {
+    public TableConnectorPatched() {
         addConnectorHierarchyChangeHandler(this);
     }

@@ -404,8 +404,8 @@
     }

     @Override
-    public VScrollTable getWidget() {
-        return (VScrollTable) super.getWidget();
+    public VScrollTablePatched getWidget() {
+        return (VScrollTablePatched) super.getWidget();
     }

     @Override
@@ -425,8 +425,8 @@

     @Override
     public void postLayout() {
-        VScrollTable table = getWidget();
-        if (table.sizeNeedsInit) {
+        VScrollTablePatched table = getWidget();
+        if (table.isVisibleInHierarchy() && table.sizeNeedsInit) {
             table.sizeInit();
             Scheduler.get().scheduleFinally(new ScheduledCommand() {
                 @Override
@@ -434,14 +434,14 @@
                     // IE8 needs some hacks to measure sizes correctly
                     WidgetUtil.forceIE8Redraw(getWidget().getElement());

-                    getLayoutManager().setNeedsMeasure(TableConnector.this);
+                    getLayoutManager().setNeedsMeasure(TableConnectorPatched.this);
                     ServerConnector parent = getParent();
                     if (parent instanceof ComponentConnector) {
                         getLayoutManager().setNeedsMeasure(
                                 (ComponentConnector) parent);
                     }
                     getLayoutManager().setNeedsVerticalLayout(
-                            TableConnector.this);
+                            TableConnectorPatched.this);
                     getLayoutManager().layoutNow();
                 }
             });
@@ -484,7 +484,7 @@
         TooltipInfo info = null;

         if (element != getWidget().getElement()) {
-            Object node = WidgetUtil.findWidget(element, VScrollTableRow.class);
+            Object node = WidgetUtil.findWidget(element, getWidget().scrollBody.iterator().next().getClass());

             if (node != null) {
                 VScrollTableRow row = (VScrollTableRow) node;